export type PieceTypes = "i" | "j" | "l" | "s" | "z" | "o" | "t" | "g";
export enum Rotation  {
    Zero,
    Right,
    UpsideDown,
    Left,
}
export interface Piece {
    type: PieceTypes;
    color: string;
    shape: number[][][];

}

export const pieces: {[key in PieceTypes]: Piece } = {} as any; 

function piece(name: PieceTypes, color: string, zero: number[][], right: number[][], upsideDown: number[][], left: number[][]) {
    const shape: number[][][] = [ zero, right, upsideDown, left ];
    pieces[name] = { type: name, color, shape };
}

piece("i", "#61e9aa", 
    [
        [0, 0, 0, 0],
        [1, 1, 1, 1],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
    ],
    [
        [0, 0, 1, 0],
        [0, 0, 1, 0],
        [0, 0, 1, 0],
        [0, 0, 1, 0],
    ],
    [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [1, 1, 1, 1],
        [0, 0, 0, 0],
    ],
    [
        [0, 1, 0, 0],
        [0, 1, 0, 0],
        [0, 1, 0, 0],
        [0, 1, 0, 0],
    ]);
piece("j", "#a3389e", 
    [
        [1, 0, 0],
        [1, 1, 1],
        [0, 0, 0],
    ],
    [
        [0, 1, 1],
        [0, 1, 0],
        [0, 1, 0],
    ],
    [
        [0, 0, 0],
        [1, 1, 1],
        [0, 0, 1],
    ],
    [
        [0, 1, 0],
        [0, 1, 0],
        [1, 1, 0],
    ]);
piece("l", "#af6035", 
    [
        [0, 0, 1],
        [1, 1, 1],
        [0, 0, 0],
    ],
    [
        [0, 1, 0],
        [0, 1, 0],
        [0, 1, 1],
    ],
    [
        [0, 0, 0],
        [1, 1, 1],
        [1, 0, 0],
    ],
    [
        [1, 1, 0],
        [0, 1, 0],
        [0, 1, 0],
    ]);
piece("s", "#87c139",
    [
        [0, 1, 1],
        [1, 1, 0],
        [0, 0, 0],
    ],
    [
        [0, 1, 0,],
        [0, 1, 1,],
        [0, 0, 1,],
    ],
    [
        [0, 0, 0],
        [0, 1, 1],
        [1, 1, 0],
    ],
    [
        [1, 0, 0],
        [1, 1, 0],
        [0, 1, 0],
    ]);
piece("z", "#ad263e", 
    [
        [1, 1, 0],
        [0, 1, 1],
        [0, 0, 0],
    ],
    [
        [0, 0, 1],
        [0, 1, 1],
        [0, 1, 0],
    ],
    [
        [0, 0, 0],
        [1, 1, 0],
        [0, 1, 1],
    ],
    [
        [0, 1, 0],
        [1, 1, 0],
        [1, 0, 0],
    ]);
piece("o", "#b5a03b",[
    [1, 1],
    [1, 1],
],
[
    [1, 1],
    [1, 1],
],
[
    [1, 1],
    [1, 1],
],
[
    [1, 1],
    [1, 1],
]);
piece("t", "#a02e9c",
    [
        [0, 1, 0],
        [1, 1, 1],
        [0, 0, 0],
    ],
    [
        [0, 1, 0],
        [0, 1, 1],
        [0, 1, 0],
    ],
    [
        [0, 0, 0],
        [1, 1, 1],
        [0, 1, 0],
    ],
    [
        [0, 1, 0],
        [1, 1, 0],
        [0, 1, 0],
    ]);
